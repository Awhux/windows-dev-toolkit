name: Windows Developer Toolkit CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pytest pytest-cov

      - name: Run linting
        run: |
          python -m black --check windows_dev_toolkit tests
          python -m flake8 windows_dev_toolkit tests
          python -m isort --check windows_dev_toolkit tests
          python -m mypy windows_dev_toolkit

      - name: Run tests with coverage
        run: |
          python -m pytest --cov=windows_dev_toolkit tests/ -v

  build:
    name: Build
    needs: test
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pyinstaller

      - name: Set build version
        id: set_version
        run: |
          $version = Get-Date -Format "yyyy.MM.dd.HHmm"
          if ('${{ github.event_name }}' -eq 'pull_request') {
            $version = "$version-unstable"
            echo "VERSION=$version" >> $env:GITHUB_ENV
            echo "ARTIFACT_NAME=WinDevToolkit-unstable" >> $env:GITHUB_ENV
          } else {
            echo "VERSION=$version" >> $env:GITHUB_ENV
            echo "ARTIFACT_NAME=WinDevToolkit-stable" >> $env:GITHUB_ENV
          }
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Build executable
        run: |
          python -m PyInstaller --onefile --clean --add-data "windows_dev_toolkit/resources/*;windows_dev_toolkit/resources/" `
            --name "WinDevToolkit-${{ env.VERSION }}.exe" --icon windows_dev_toolkit/resources/icon.ico `
            --uac-admin --hidden-import win32api --hidden-import win32con `
            --hidden-import winreg --hidden-import psutil `
            windows_dev_toolkit/main.py

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: dist/WinDevToolkit-${{ env.VERSION }}.exe
          retention-days: 30

  pr-comment:
    name: PR Comment
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: windows-latest
    steps:
      - name: Get artifact URL
        id: artifact_url
        run: |
          $RUN_ID = '${{ github.run_id }}'
          $REPO = '${{ github.repository }}'
          $ARTIFACT_URL = "https://github.com/$REPO/actions/runs/$RUN_ID/artifacts"
          echo "url=$ARTIFACT_URL" >> $env:GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifactUrl = '${{ steps.artifact_url.outputs.url }}';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Build Status
              
              âœ… Build completed successfully
              
              ### Download Unstable Build
              
              An unstable build has been created for this PR. You can download it here:
              
              [Download Unstable Build](${artifactUrl})
              
              **Note:** You need to be logged in to GitHub to download this artifact.
              This build is tagged as **unstable** and should only be used for testing purposes.
              `
            })

# This workflow enforces that PRs cannot be merged if tests fail
# GitHub repository settings must be configured to:
# - Require status checks to pass before merging
# - Require the "Test" job to pass